includeConfig 'conf/modules.config'

profiles {
    
    standard {
        executor.name = 'local'
        process.memory = '4 GB'
        process.cpus = 2
    }
    
    slurm {
        executor {
            queueSize = 60
            name = 'slurm'
            exitReadTimeout = '20 min'
        }
        process {
            scratch = '$TMPDIR'  // Use environment variable
            queue = 'cpu'
            memory = '8 GB'
            cpus = 4
            time = '2h'
        }
    }
    
    docker {
        docker.enabled = true
        process {
            container = 'ubuntu:20.04'  // Base container - users should customize
        }
    }
    
    singularity {
        singularity.enabled = true
        process {
            container = 'ubuntu:20.04'  // Base container - users should customize
        }
    }
}

// Resource configuration
process {
    withName: 'RNASEQ_MAPPING_STAR' {
        memory = { 32.GB * task.attempt }
        cpus = { 8 * task.attempt }
        time = { 4.h * task.attempt }
    }
    
    withName: 'MERGE_BAMS' {
        memory = { 16.GB * task.attempt }
        cpus = { 4 * task.attempt }
        time = { 2.h * task.attempt }
    }
    
    withName: 'SAILOR.*' {
        memory = { 8.GB * task.attempt }
        cpus = { 2 * task.attempt }
        time = { 2.h * task.attempt }
    }
    
    withName: 'DESEQ2.*' {
        memory = { 8.GB * task.attempt }
        cpus = { 2 * task.attempt }
        time = { 1.h * task.attempt }
    }
    
    errorStrategy = { task.attempt <= 3 ? 'retry' : 'finish' }
    maxRetries = 3
    maxErrors = '-1'
}

// Execution report configuration
timeline {
    enabled = true
    file = "${params.output_dir}/timeline.html"
}

report {
    enabled = true
    file = "${params.output_dir}/report.html"
}

trace {
    enabled = true
    file = "${params.output_dir}/trace.txt"
}

dag {
    enabled = true
    file = "${params.output_dir}/dag.svg"
}